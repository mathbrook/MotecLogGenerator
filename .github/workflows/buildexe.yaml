name: build and release application
on:
  push:
    tags:
      - '*'

jobs:
  build:
    continue-on-error: true
    name: build and release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: motec_log_gui-windows
            nuitka_py: .\\motec_log_gui.py

          - os: windows-11-arm
            artifact_name: motec_log_gui-arm-windows
            nuitka_py: .\\motec_log_gui.py

          - os: ubuntu-latest
            artifact_name: motec_log_gui-linux
            nuitka_py: ./motec_log_gui.py

          - os: macos-latest
            artifact_name: motec_log_gui-macos
            nuitka_py: ./motec_log_gui.py

          - os: ubuntu-24.04-arm
            artifact_name: motec_log_gui-arm-linux
            nuitka_py: ./motec_log_gui.py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: sync project deps
        run: uv sync

      - name: install tkinter ubuntu
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk
          
      - name: install tkinter macos
        if: matrix.os == 'macos-latest'
        run: |
          brew install python-tk

      - name: generate arg for the icon
        id: icon_arg
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ] || [ "${{ matrix.os }}" = "windows-11-arm" ]; then
            echo "icon_arg=--windows-icon-from-ico=./icons/squirrel.png" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            echo "icon_arg=--macos-app-icon=./icons/squirrel.png" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ] || [ "${{ matrix.os }}" = "ubuntu-24.04-arm" ]; then
            echo "icon_arg=--linux-icon=./icons/squirrel.png" >> $GITHUB_OUTPUT
          else
            echo "icon_arg=" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: build standalone exe
        run: |
          uv run python -m nuitka --standalone ${{ matrix.nuitka_py }} --enable-plugin=tk-inter --assume-yes-for-downloads --file-version=${{ github.ref_name }} --company-name="mathbrookie" --product-name="motec-log-gui" ${{ steps.icon_arg.outputs.icon_arg }}

      - name: generate release notes
        id: release_notes
        run: |
          echo "# Release ${{ github.ref_name }}" > RELEASE_NOTES.md
          echo >> RELEASE_NOTES.md
          echo '## Changes since last release:' >> RELEASE_NOTES.md
          git log --pretty=format:'- %s (%an)' $(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))..HEAD >> RELEASE_NOTES.md

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: motec_log_gui.dist/**

      - name: upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: motec_log_gui.dist/**
          body_path: RELEASE_NOTES.md
